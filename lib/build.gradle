/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'war'
    id "org.gretty" version "3.0.5"

}
version = '0.1.0'
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url "https://maven.restlet.com"
    }
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'
    implementation 'org.apache.kafka:kafka-clients:2.8.0'
    implementation 'org.apache.kafka:kafka-streams:2.8.0'
    implementation 'com.maxmind.geoip2:geoip2:2.15.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.3'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'org.restlet.jee:org.restlet:2.4.3'
    implementation 'org.restlet.jee:org.restlet.ext.json:2.4.3'
    implementation 'org.restlet.jee:org.restlet.ext.servlet:2.4.3'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1-jre'
}

project.configurations.implementation.setCanBeResolved(true)

tasks.named('jar') {
    duplicatesStrategy = 'include'
    manifest {
        attributes (
                'Main-Class': "streamprocessor.VehicleStatusCountProcessor",
        )
    }
    from {
        configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

gretty {
    contextPath = '/'
}

war {
    webAppDirectory = file('src/main/webapp')

}